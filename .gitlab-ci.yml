stages:
  - eval
  - build

eval:
  stage: eval
  script: 
    - nix-env -iA nixpkgs.jq
    - names=$(nix --extra-experimental-features "nix-command flakes" eval --json .#nixosConfigurations --apply 'builtins.attrNames')
    - "json=$(echo \"$names\" | nix --extra-experimental-features \"nix-command flakes\" run --inputs-from . nixpkgs#jq -- '{include: map({name: .})}')"
    - echo "$json" > matrix.json
  artifacts:
    paths:
      - matrix.json

build:
  stage: build
  script:
    - nix-env -iA nixpkgs.jq 
    - configs=$(cat matrix.json | jq -r '.include[].name')
    - for config in $configs; do
        nix build --extra-experimental-features "nix-command flakes" --accept-flake-config -L --fallback --option trusted-users $(whoami) .#nixosConfigurations.${config}.config.system.build.toplevel;
      done
  needs:
    - job: eval
      artifacts: true
  only:
    - branches

